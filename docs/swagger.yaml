definitions:
  board.BoardResponse:
    properties:
      event:
        $ref: '#/definitions/model.Event'
      myrank:
        items:
          $ref: '#/definitions/model.Ranking'
        type: array
      ranks:
        items:
          $ref: '#/definitions/model.Ranking'
        type: array
      total_activity:
        type: integer
    type: object
  model.ActivityInfo:
    properties:
      activity_date:
        type: string
      app:
        type: string
      caption:
        type: string
      created_at:
        type: string
      distance:
        type: number
      id:
        type: string
      img_url:
        type: string
      time:
        type: integer
      updated_at:
        type: string
    type: object
  model.AddActivityForm:
    properties:
      activity_date:
        type: string
      caption:
        type: string
      distance:
        type: number
      event_id:
        type: string
      image_url:
        type: string
      user_id:
        type: string
    required:
    - distance
    - event_id
    type: object
  model.AddActivityFormWorkout:
    properties:
      event_code:
        type: string
      event_id:
        type: string
      workout_info:
        $ref: '#/definitions/model.WorkoutActivityInfo'
    type: object
  model.AddMultiActivityFormWorkout:
    properties:
      event_activity:
        items:
          $ref: '#/definitions/model.EventActivity'
        type: array
      workout_info:
        $ref: '#/definitions/model.WorkoutActivityInfo'
    required:
    - event_activity
    type: object
  model.AddMultiWorkout:
    properties:
      workouts:
        items:
          $ref: '#/definitions/model.WorkoutActivityInfo'
        type: array
    type: object
  model.AddWorkoutForm:
    properties:
      activity_type:
        type: string
      app:
        type: string
      calory:
        type: number
      caption:
        type: string
      distance:
        type: number
      duration:
        type: integer
      end_date:
        type: string
      is_sync:
        type: boolean
      locations:
        items:
          $ref: '#/definitions/model.Location'
        type: array
      net_elevation_gain:
        type: number
      pace:
        type: number
      start_date:
        type: string
      time_string:
        type: string
      user_id:
        type: string
      workout_date:
        type: string
    type: object
  model.Address:
    properties:
      address:
        type: string
      city:
        type: string
      created_at:
        type: string
      district:
        type: string
      id:
        type: string
      province:
        type: string
      updated_at:
        type: string
      zipcode:
        type: string
    required:
    - address
    - city
    - district
    - province
    - zipcode
    type: object
  model.AmountSummary:
    properties:
      id:
        type: string
      paid_success:
        type: number
      paid_waiting:
        type: number
      paid_waiting_approve:
        type: number
      ticket_id:
        type: string
      title:
        type: string
    type: object
  model.Athlete:
    properties:
      id:
        type: integer
      resource_state:
        type: integer
    type: object
  model.BankAccount:
    properties:
      account_name:
        type: string
      account_number:
        type: string
      bank:
        type: string
    type: object
  model.Category:
    properties:
      active:
        type: boolean
      id:
        type: string
      name:
        type: string
    type: object
  model.ConfigModel:
    properties:
      authen_token:
        type: string
      authen_url:
        type: string
      leader_board_url:
        type: string
      preview_url:
        type: string
    type: object
  model.Coupon:
    properties:
      active:
        type: boolean
      coupon_code:
        type: string
      created_at:
        type: string
      description:
        type: string
      discount:
        type: number
      end_date:
        type: string
      id:
        type: string
      sale_id:
        type: string
      start_date:
        type: string
      updated_at:
        type: string
    type: object
  model.Event:
    properties:
      agreement:
        type: string
      category:
        type: string
      code:
        type: string
      contact:
        type: string
      contactFacebook:
        type: string
      contactLine:
        type: string
      content:
        type: string
      cover:
        type: string
      coverThumbnail:
        type: string
      eventDate:
        type: string
      eventEndDate:
        type: string
      eventEndDateText:
        type: string
      eventStartDate:
        type: string
      eventStartDateText:
        type: string
      id:
        type: integer
      isFreeEvent:
        type: boolean
      isRunexOnly:
        type: boolean
      isSendShirtByPost:
        type: boolean
      organizer:
        type: string
      photoBib:
        type: string
      photoBibThumbnail:
        type: string
      photoCert:
        type: string
      photoCertThumbnail:
        type: string
      photoMedal:
        type: string
      photoMedalThumbnail:
        type: string
      photoShirt:
        type: string
      photoShirtThumbnail:
        type: string
      place:
        type: string
      prizes:
        items:
          properties:
            description:
              type: string
            id:
              type: integer
            name:
              type: string
            photo:
              type: string
          type: object
        type: array
      registerEndDate:
        type: string
      registerEndDateText:
        type: string
      registerStartDate:
        type: string
      registerStartDateText:
        type: string
      schedules:
        items:
          properties:
            description:
              type: string
            id:
              type: integer
            name:
              type: string
          type: object
        type: array
      shirts:
        items:
          $ref: '#/definitions/model.Shirts'
        type: array
      tickets:
        items:
          $ref: '#/definitions/model.Tickets'
        type: array
      title:
        type: string
      userId:
        type: string
    type: object
  model.EventActivity:
    properties:
      event_id:
        type: string
      partner:
        $ref: '#/definitions/model.PartnerEvent'
    type: object
  model.EventList:
    properties:
      code:
        type: string
      content:
        type: string
      cover:
        type: string
      event_date:
        type: string
      event_end_date:
        type: string
      event_start_date:
        type: string
      title:
        type: string
    type: object
  model.EventReg:
    properties:
      category:
        $ref: '#/definitions/model.Category'
      cover:
        type: string
      cover_thumb:
        type: string
      description:
        type: string
      end_event:
        type: string
      end_reg:
        type: string
      id:
        type: string
      inapp:
        type: boolean
      is_active:
        type: boolean
      location:
        type: string
      name:
        type: string
      start_event:
        type: string
      start_reg:
        type: string
      status:
        description: |-
          Product     []ProduceEvent     `json:"product" bson:"product"`
          Ticket      []TicketEvent      `json:"ticket" bson:"ticket"`
        type: string
    type: object
  model.FindPreOrderRequest:
    properties:
      keyword:
        type: string
    type: object
  model.GetKaoActivityRequest:
    properties:
      ebib:
        type: string
      slug:
        type: string
    type: object
  model.Lab:
    properties:
      activity:
        properties:
          id:
            type: integer
          resource_state:
            type: integer
        type: object
      athlete:
        properties:
          id:
            type: integer
          resource_state:
            type: integer
        type: object
      average_speed:
        type: number
      distance:
        type: number
      elapsed_time:
        type: integer
      end_index:
        type: integer
      id:
        type: integer
      lap_index:
        type: integer
      max_speed:
        type: number
      moving_time:
        type: integer
      name:
        type: string
      pace_zone:
        type: integer
      resource_state:
        type: integer
      split:
        type: integer
      start_date:
        type: string
      start_date_local:
        type: string
      start_index:
        type: integer
      total_elevation_gain:
        type: number
    type: object
  model.Location:
    properties:
      altitude:
        type: number
      elevation_gain:
        type: number
      harth_rate:
        type: number
      latitude:
        type: number
      longitude:
        type: number
      temp:
        type: number
      timestamp:
        type: string
    type: object
  model.Map:
    properties:
      id:
        type: string
      polyline:
        type: string
      resource_state:
        type: integer
      summary_polyline:
        type: string
    type: object
  model.NotificationRequest:
    properties:
      body:
        type: string
      title:
        type: string
      token:
        type: string
    type: object
  model.PartnerEvent:
    properties:
      partner_id:
        type: string
      partner_name:
        type: string
      ref_activity_key:
        type: string
      ref_activity_value:
        type: string
      ref_event_key:
        type: string
      ref_event_value:
        type: string
      ref_phone_value:
        type: string
      slug:
        type: string
    type: object
  model.Photos:
    properties:
      count:
        type: integer
      primary:
        type: string
    type: object
  model.PreOrder:
    properties:
      EBib:
        type: string
      FirstName:
        type: string
      ID:
        type: string
      LastName:
        type: string
      Shipping_Address:
        type: string
      Shirt_Size:
        type: string
      Shirt_Type:
        type: string
      Tel_No:
        type: string
    type: object
  model.ProductImage:
    properties:
      path_url:
        type: string
    type: object
  model.ProductTicket:
    properties:
      id:
        type: string
      reuse:
        type: boolean
      show:
        type: boolean
    type: object
  model.Ranking:
    properties:
      activity_info:
        items:
          $ref: '#/definitions/model.ActivityInfo'
        type: array
      event_code:
        type: string
      event_id:
        type: integer
      event_user:
        type: string
      id:
        type: string
      rank_no:
        type: integer
      total_distance:
        type: number
      user_id:
        type: string
      user_info:
        $ref: '#/definitions/model.UserEvent'
    type: object
  model.Register:
    properties:
      coupon:
        $ref: '#/definitions/model.Coupon'
      created_at:
        type: string
      discount_price:
        type: number
      event:
        $ref: '#/definitions/model.EventReg'
      event_id:
        type: string
      id:
        type: string
      order_id:
        type: string
      payment_type:
        type: string
      phone:
        type: string
      product:
        items:
          $ref: '#/definitions/model.RegisterProduct'
        type: array
      promo_code:
        type: string
      reg_date:
        type: string
      register_number:
        type: string
      shiping_address:
        $ref: '#/definitions/model.ShipingAddress'
      slip:
        $ref: '#/definitions/model.SlipTransfer'
      status:
        type: string
      ticket_options:
        items:
          $ref: '#/definitions/model.TicketOption'
        type: array
      tickets:
        description: Ticket         RegisterTicket     `json:"ticket" bson:"ticket"`
        items:
          $ref: '#/definitions/model.RegisterTicket'
        type: array
      total_price:
        type: number
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  model.RegisterProduct:
    properties:
      id:
        type: string
      price:
        type: number
      product:
        $ref: '#/definitions/model.RegisterProductDetail'
      type:
        type: string
    type: object
  model.RegisterProductDetail:
    properties:
      created_at:
        type: string
      currency:
        type: string
      detail:
        type: string
      id:
        type: string
      image:
        items:
          $ref: '#/definitions/model.ProductImage'
        type: array
      name:
        type: string
      price:
        type: number
      status:
        type: string
      type:
        items:
          $ref: '#/definitions/model.RegisterProductType'
        type: array
      unit:
        type: number
      updated_at:
        type: string
    type: object
  model.RegisterProductType:
    properties:
      name:
        type: string
      price:
        type: number
      remark:
        type: string
    type: object
  model.RegisterRequest:
    properties:
      event_code:
        type: string
      event_id:
        type: integer
      kao_request:
        $ref: '#/definitions/model.GetKaoActivityRequest'
      regs:
        $ref: '#/definitions/model.Regs'
    type: object
  model.RegisterTicket:
    properties:
      distance:
        type: string
      product:
        $ref: '#/definitions/model.RegisterProductDetail'
      remark:
        type: string
      ticket:
        $ref: '#/definitions/model.TicketEvent'
      type:
        type: string
    type: object
  model.RegisterTokenRequest:
    properties:
      firebase_token:
        type: string
    type: object
  model.RegisterV2:
    properties:
      event_code:
        type: string
      owner_id:
        type: string
      regs:
        items:
          $ref: '#/definitions/model.Regs'
        type: array
      user_code:
        type: string
    type: object
  model.Regs:
    properties:
      coupon:
        $ref: '#/definitions/model.Coupon'
      created_at:
        type: string
      discount_price:
        type: number
      event:
        $ref: '#/definitions/model.Event'
      event_code:
        type: string
      event_id:
        type: string
      id:
        type: string
      order_id:
        type: string
      partner:
        $ref: '#/definitions/model.PartnerEvent'
      payment_date:
        type: string
      payment_type:
        type: string
      promo_code:
        type: string
      reg_date:
        type: string
      status:
        type: string
      ticket_options:
        items:
          $ref: '#/definitions/model.TicketOptionV2'
        type: array
      total_price:
        type: number
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  model.ReportDashboard:
    properties:
      amount_summary:
        items:
          $ref: '#/definitions/model.AmountSummary'
        type: array
      code:
        type: string
      event_id:
        type: string
      paid:
        type: number
      product_count:
        type: integer
      register_count:
        type: integer
      register_paid:
        type: integer
      ticket_summary:
        items:
          $ref: '#/definitions/model.TicketSummary'
        type: array
      wait_to_approve:
        type: number
      wait_to_pay:
        type: number
    type: object
  model.ShipingAddress:
    properties:
      address:
        type: string
      city:
        type: string
      created_at:
        type: string
      district:
        type: string
      id:
        type: string
      province:
        type: string
      updated_at:
        type: string
      zipcode:
        type: string
    type: object
  model.Shirts:
    properties:
      chest:
        type: string
      id:
        type: integer
      length:
        type: string
      short_sleeve_shirt:
        type: boolean
      size:
        type: string
      sleeveless_shirt:
        type: boolean
    type: object
  model.SimilarActivities:
    properties:
      average_speed:
        type: number
      effort_count:
        type: integer
      frequency_milestone:
        type: string
      max_average_speed:
        type: number
      mid_average_speed:
        type: number
      min_average_speed:
        type: number
      pr_rank:
        type: string
      resource_state:
        type: integer
      trend:
        $ref: '#/definitions/model.Trend'
    type: object
  model.SlipTransfer:
    properties:
      amount:
        type: number
      bank_account:
        $ref: '#/definitions/model.BankAccount'
      date_tranfer:
        type: string
      image:
        type: string
      order_id:
        type: string
      remark:
        type: string
      time_tranfer:
        type: string
    type: object
  model.SplitsMetric:
    properties:
      average_grade_adjusted_speed:
        type: number
      average_speed:
        type: number
      distance:
        type: number
      elapsed_time:
        type: integer
      elevation_difference:
        type: number
      moving_time:
        type: integer
      pace_zone:
        type: integer
      split:
        type: integer
    type: object
  model.SplitsStandard:
    properties:
      average_grade_adjusted_speed:
        type: number
      average_speed:
        type: number
      distance:
        type: number
      elapsed_time:
        type: integer
      elevation_difference:
        type: number
      moving_time:
        type: integer
      pace_zone:
        type: integer
      split:
        type: integer
    type: object
  model.StravaActivity:
    properties:
      achievement_count:
        type: integer
      athlete:
        $ref: '#/definitions/model.Athlete'
      athlete_count:
        type: integer
      available_zones:
        items:
          type: string
        type: array
      average_speed:
        type: number
      best_efforts:
        items:
          type: string
        type: array
      calories:
        type: integer
      comment_count:
        type: integer
      commute:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      device_name:
        type: string
      display_hide_heartrate_option:
        type: boolean
      distance:
        type: number
      elapsed_time:
        type: integer
      elev_high:
        type: number
      elev_low:
        type: number
      embed_token:
        type: string
      end_latlng:
        items:
          type: number
        type: array
      external_id:
        type: string
      flagged:
        type: boolean
      from_accepted_tag:
        type: boolean
      gear_id:
        type: string
      has_heartrate:
        type: boolean
      has_kudoed:
        type: boolean
      heartrate_opt_out:
        type: boolean
      id:
        type: integer
      is_sync:
        type: boolean
      kudos_count:
        type: integer
      laps:
        items:
          $ref: '#/definitions/model.Lab'
        type: array
      location_city:
        type: string
      location_country:
        type: string
      location_state:
        type: string
      manual:
        type: boolean
      map:
        $ref: '#/definitions/model.Map'
      max_speed:
        type: number
      moving_time:
        type: integer
      name:
        type: string
      perceived_exertion:
        type: string
      photo_count:
        type: integer
      photos:
        $ref: '#/definitions/model.Photos'
      pr_count:
        type: integer
      prefer_perceived_exertion:
        type: boolean
      private:
        type: boolean
      resource_state:
        type: integer
      segment_efforts:
        items:
          type: string
        type: array
      similar_activities:
        $ref: '#/definitions/model.SimilarActivities'
      splits_metric:
        items:
          $ref: '#/definitions/model.SplitsMetric'
        type: array
      splits_standard:
        items:
          $ref: '#/definitions/model.SplitsStandard'
        type: array
      start_date:
        type: string
      start_date_local:
        type: string
      start_latitude:
        type: number
      start_latlng:
        items:
          type: number
        type: array
      start_longitude:
        type: number
      timezone:
        type: string
      total_elevation_gain:
        type: number
      total_photo_count:
        type: integer
      trainer:
        type: boolean
      type:
        type: string
      upload_id:
        type: integer
      upload_id_str:
        type: string
      utc_offset:
        type: integer
      visibility:
        type: string
      workout_type:
        type: integer
    type: object
  model.StravaAddRequest:
    properties:
      provider:
        type: string
      provider_id:
        type: string
      strava_activity:
        $ref: '#/definitions/model.StravaActivity'
      strava_id:
        type: string
    type: object
  model.Tambon:
    properties:
      amphoe:
        type: string
      amphoe_code:
        type: integer
      district:
        type: string
      district_code:
        type: integer
      id:
        type: string
      province:
        type: string
      province_code:
        type: integer
      zipcode:
        type: integer
    type: object
  model.TicketEvent:
    properties:
      created_at:
        type: string
      currency:
        type: string
      description:
        type: string
      distance:
        type: number
      id:
        type: string
      image:
        type: string
      price:
        type: number
      product:
        items:
          $ref: '#/definitions/model.ProductTicket'
        type: array
      subtype:
        items:
          type: string
        type: array
      title:
        type: string
      unit:
        type: string
      updated_at:
        type: string
    type: object
  model.TicketOption:
    properties:
      product:
        items:
          $ref: '#/definitions/model.RegisterProduct'
        type: array
      reciept_type:
        type: string
      register_number:
        type: string
      tickets:
        items:
          $ref: '#/definitions/model.RegisterTicket'
        type: array
      total_price:
        type: number
      user_option:
        $ref: '#/definitions/model.UserOption'
    type: object
  model.TicketOptionV2:
    properties:
      reciept_type:
        type: string
      register_number:
        type: string
      shirts:
        $ref: '#/definitions/model.Shirts'
      tickets:
        $ref: '#/definitions/model.Tickets'
      total_price:
        type: number
      user_option:
        $ref: '#/definitions/model.UserOption'
    type: object
  model.TicketSummary:
    properties:
      id:
        type: string
      paid_count:
        type: integer
      paid_waiting_approve_count:
        type: integer
      register_count:
        type: integer
      ticket_id:
        type: string
      title:
        type: string
    type: object
  model.Tickets:
    properties:
      category:
        type: string
      created_at:
        type: string
      detail:
        type: object
      distance:
        type: string
      event_id:
        type: string
      id:
        type: string
      items:
        type: object
      limit:
        type: string
      photo_map:
        type: string
      photo_medal:
        type: string
      photo_shirt:
        type: string
      price:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  model.Trend:
    properties:
      current_activity_index:
        type: integer
      direction:
        type: integer
      max_speed:
        type: number
      mid_speed:
        type: number
      min_speed:
        type: number
      speeds:
        items:
          type: number
        type: array
    type: object
  model.User:
    properties:
      address:
        items:
          $ref: '#/definitions/model.Address'
        type: array
      avatar:
        type: string
      birthdate:
        type: string
      blood_type:
        type: string
      citycen_id:
        type: string
      confirm:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      emergency_contact:
        type: string
      emergency_phone:
        type: string
      events:
        items:
          type: string
        type: array
      firstname:
        type: string
      firstname_th:
        type: string
      fullname:
        type: string
      gender:
        type: string
      lastname:
        type: string
      lastname_th:
        type: string
      nationality:
        type: string
      passport:
        type: string
      pf:
        type: string
      phone:
        type: string
      role:
        type: string
      strava_avatar:
        type: string
      strava_firstname:
        type: string
      strava_id:
        type: string
      strava_latname:
        type: string
      updated_at:
        type: string
    type: object
  model.UserEvent:
    properties:
      avatar:
        type: string
      email:
        type: string
      firstname:
        type: string
      fullname:
        type: string
      lastname:
        type: string
      phone:
        type: string
      user_id:
        type: string
    type: object
  model.UserOption:
    properties:
      address:
        type: string
      birthdate:
        type: string
      blood_type:
        type: string
      citycen_id:
        type: string
      confirm:
        type: boolean
      created_at:
        type: string
      emergency_contact:
        type: string
      emergency_phone:
        type: string
      firstname:
        type: string
      firstname_th:
        type: string
      gender:
        type: string
      lastname:
        type: string
      lastname_th:
        type: string
      nationality:
        type: string
      passport:
        type: string
      phone:
        type: string
      tambon:
        $ref: '#/definitions/model.Tambon'
      updated_at:
        type: string
    type: object
  model.UserProviderRequest:
    properties:
      avatar:
        type: string
      birthdate:
        type: string
      email:
        description: 'in: body'
        type: string
      firstname:
        type: string
      fullname:
        type: string
      gender:
        type: string
      lastname:
        type: string
      pf:
        type: string
      provider:
        type: string
      provider_id:
        type: string
    required:
    - pf
    - provider
    - provider_id
    type: object
  model.UserStravaSyncRequest:
    properties:
      email:
        description: 'in: body'
        type: string
      provider:
        type: string
      provider_id:
        type: string
      strava_avatar:
        type: string
      strava_firstname:
        type: string
      strava_id:
        type: string
      strava_latname:
        type: string
    required:
    - provider
    - provider_id
    - strava_id
    type: object
  model.WorkoutActivityInfo:
    properties:
      activity_type:
        type: string
      app:
        type: string
      calory:
        type: number
      caption:
        type: string
      distance:
        type: number
      duration:
        type: integer
      end_date:
        type: string
      id:
        type: string
      is_sync:
        type: boolean
      locations:
        items:
          $ref: '#/definitions/model.Location'
        type: array
      net_elevation_gain:
        type: number
      pace:
        type: number
      ref_id:
        type: string
      start_date:
        type: string
      time_string:
        type: string
      workout_date:
        type: string
    type: object
  model.Workouts:
    properties:
      activity_info:
        items:
          $ref: '#/definitions/model.WorkoutActivityInfo'
        type: array
      id:
        type: string
      total_distance:
        type: number
      user_id:
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  response.ResponseOAuth:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
info:
  contact: {}
paths:
  /activitiesWorkout:
    post:
      consumes:
      - application/json
      description: save  Add activity from workout API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.AddMultiActivityFormWorkout'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Add activity from workout
      tags:
      - activity
  /activity:
    post:
      consumes:
      - application/json
      description: save  Add activity API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.AddActivityForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Add activity
      tags:
      - activity
  /activityWorkout:
    post:
      consumes:
      - application/json
      description: save  Add activity from workout API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.AddActivityFormWorkout'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Add activity from workout
      tags:
      - activity
  /amphoe/:{amphoe}:
    get:
      consumes:
      - application/json
      description: get tambon datas list by zipcode
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Tambon'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: get tambon datas list by zipcode
      tags:
      - tambon
  /api/v1/board/ranking/:{eventID}:
    get:
      consumes:
      - application/json
      description: get leader board activty API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/board.BoardResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: get leader board activty
      tags:
      - board
  /config:
    get:
      consumes:
      - application/json
      description: get config info API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.ConfigModel'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get config app
      tags:
      - config
  /district/:{district}:
    get:
      consumes:
      - application/json
      description: get tambon datas list by zipcode
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Tambon'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: get tambon datas list by zipcode
      tags:
      - tambon
  /event/all:
    get:
      consumes:
      - application/json
      description: get Get event all API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EventList'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get event all
      tags:
      - event
  /event/detail/{code}:
    get:
      consumes:
      - application/json
      description: get Get event detail API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.EventList'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get event detail
      tags:
      - event
  /kao:
    post:
      consumes:
      - application/json
      description: GetKaoActivity get Kao event detail open id API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.GetKaoActivityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseOAuth'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: get Kao event detail
      tags:
      - kao
  /login:
    post:
      consumes:
      - application/json
      description: login or add new user from open id API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UserProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseOAuth'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: user login
      tags:
      - user
  /logout:
    get:
      consumes:
      - application/json
      description: user logout system API calls
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: user logout
      tags:
      - user
    post:
      consumes:
      - application/json
      description: user logout system API calls
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: user logout
      tags:
      - user
  /notificationOne:
    post:
      consumes:
      - application/json
      description: send notification one token one time
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.NotificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: send notification one token one time
      tags:
      - notification
  /province/:{province}:
    get:
      consumes:
      - application/json
      description: get tambon datas list by zipcode
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Tambon'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: get tambon datas list by zipcode
      tags:
      - tambon
  /refreshAccessToken:
    post:
      description: Authenticates a user and provides a JWT to refresh Authorize API
        calls
      operationId: Authentication
      parameters:
      - description: RefreshToken
        in: formData
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseOAuth'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Refresh a JSON Web Token
      tags:
      - user
  /register/:{eventID}:
    get:
      consumes:
      - application/json
      description: get register API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Register'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get register by event id
      tags:
      - register
  /register/add:
    post:
      consumes:
      - application/json
      description: save register API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.RegisterV2'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: add register event
      tags:
      - register
  /register/checkRegEventCode/:{code}:
    get:
      consumes:
      - application/json
      description: check register API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: check register by user id and event code
      tags:
      - register
  /register/checkUserRegisterEvent/:{eventID}:
    get:
      consumes:
      - application/json
      description: check register API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: check register by user id
      tags:
      - register
  /register/myRegEvent:
    get:
      consumes:
      - application/json
      description: get register all API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.RegisterV2'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get register all
      tags:
      - register
  /register/myRegEventActivate:
    get:
      consumes:
      - application/json
      description: get register payment success API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.RegisterV2'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: get register payment success by user id
      tags:
      - register
  /register/regsEvent/:{eventID}:
    get:
      consumes:
      - application/json
      description: get register datas 's eventer and admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.RegisterV2'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: get register datas 's eventer and admin
      tags:
      - register
  /registerFirebase:
    post:
      consumes:
      - application/json
      description: user firebase register API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.RegisterTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: user firebase register
      tags:
      - user
  /report/dashboard/{eventID}:
    get:
      consumes:
      - application/json
      description: get report dashboard event API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.ReportDashboard'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get report dashboard event
      tags:
      - report
  /searchPreOrder:
    post:
      consumes:
      - application/json
      description: Search pre order detail API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.FindPreOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.PreOrder'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Search pre order detail
      tags:
      - preorder
  /signup:
    post:
      consumes:
      - application/json
      description: add new user API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UserProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseOAuth'
        "208":
          description: Already Reported
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add new user
      tags:
      - user
  /strava/activities:
    get:
      consumes:
      - application/json
      description: get activities from strava API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.StravaActivity'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: get activities from strava
      tags:
      - sync
  /strava/activity:
    post:
      consumes:
      - application/json
      description: add new activity from strava API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.StravaAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add new activity from strava
      tags:
      - sync
  /syncStrava:
    put:
      consumes:
      - application/json
      description: Update User sync user with strava API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UserStravaSyncRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Update User sync user with strava
      tags:
      - user
  /tambon:
    get:
      consumes:
      - application/json
      description: get tambon datas list all
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Tambon'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: get tambon datas list all
      tags:
      - tambon
  /tambon/:{zipcode}:
    get:
      consumes:
      - application/json
      description: get tambon datas list by zipcode
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Tambon'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: get tambon datas list by zipcode
      tags:
      - tambon
  /user:
    get:
      consumes:
      - application/json
      description: get user info API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get user info
      tags:
      - user
    put:
      consumes:
      - application/json
      description: put user info to update user info API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Update user info
      tags:
      - user
  /workout:
    post:
      consumes:
      - application/json
      description: save workout API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.AddWorkoutForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.WorkoutActivityInfo'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Add workout
      tags:
      - workouts
  /workoutDetail:
    get:
      consumes:
      - application/json
      description: list workouts API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Workouts'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get workouts detail by id
      tags:
      - workouts
  /workouts:
    get:
      consumes:
      - application/json
      description: list workouts API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Workouts'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get workouts list
      tags:
      - workouts
    post:
      consumes:
      - application/json
      description: save workout API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.AddMultiWorkout'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Add workouts multiple
      tags:
      - workouts
  /workouts/history:
    post:
      consumes:
      - application/json
      description: list workouts API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Workouts'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get workouts history list by month
      tags:
      - workouts
  /workouts/historyAll:
    get:
      consumes:
      - application/json
      description: list workouts API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Workouts'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get workouts history list by month
      tags:
      - workouts
swagger: "2.0"
