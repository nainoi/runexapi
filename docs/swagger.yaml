definitions:
  model.AddWorkoutForm:
    properties:
      activity_type:
        type: string
      app:
        type: string
      calory:
        type: number
      caption:
        type: string
      distance:
        type: number
      duration:
        type: integer
      end_date:
        type: string
      is_sync:
        type: boolean
      locations:
        items:
          $ref: '#/definitions/model.Location'
        type: array
      net_elevation_gain:
        type: number
      pace:
        type: number
      start_date:
        type: string
      time_string:
        type: string
      user_id:
        type: string
      workout_date:
        type: string
    type: object
  model.Address:
    properties:
      address:
        type: string
      city:
        type: string
      created_at:
        type: string
      district:
        type: string
      id:
        type: string
      province:
        type: string
      updated_at:
        type: string
      zipcode:
        type: string
    required:
    - address
    - city
    - district
    - province
    - zipcode
    type: object
  model.Athlete:
    properties:
      id:
        type: integer
      resource_state:
        type: integer
    type: object
  model.FindPreOrderRequest:
    properties:
      keyword:
        type: string
    type: object
  model.FirebaseToken:
    properties:
      token:
        type: string
      uuid:
        type: string
    type: object
  model.Location:
    properties:
      altitude:
        type: number
      elevation_gain:
        type: number
      harth_rate:
        type: number
      latitude:
        type: number
      longitude:
        type: number
      temp:
        type: number
      timestamp:
        type: string
    type: object
  model.Map:
    properties:
      id:
        type: string
      polyline:
        type: string
      resource_state:
        type: integer
      summary_polyline:
        type: string
    type: object
  model.NotificationRequest:
    properties:
      body:
        type: string
      title:
        type: string
      token:
        type: string
    type: object
  model.Photos:
    properties:
      count:
        type: integer
      primary:
        type: string
    type: object
  model.PreOrder:
    properties:
      EBib:
        type: string
      FirstName:
        type: string
      ID:
        type: string
      LastName:
        type: string
      Shipping_Address:
        type: string
      Shirt_Size:
        type: string
      Shirt_Type:
        type: string
      Tel_No:
        type: string
    type: object
  model.SimilarActivities:
    properties:
      average_speed:
        type: integer
      effort_count:
        type: integer
      frequency_milestone:
        type: string
      max_average_speed:
        type: integer
      mid_average_speed:
        type: integer
      min_average_speed:
        type: integer
      pr_rank:
        type: string
      resource_state:
        type: integer
      trend:
        $ref: '#/definitions/model.Trend'
        type: object
    type: object
  model.SplitsMetric:
    properties:
      average_grade_adjusted_speed:
        type: integer
      average_speed:
        type: integer
      distance:
        type: integer
      elapsed_time:
        type: integer
      elevation_difference:
        type: integer
      moving_time:
        type: integer
      pace_zone:
        type: integer
      split:
        type: integer
    type: object
  model.SplitsStandard:
    properties:
      average_grade_adjusted_speed:
        type: integer
      average_speed:
        type: integer
      distance:
        type: integer
      elapsed_time:
        type: integer
      elevation_difference:
        type: integer
      moving_time:
        type: integer
      pace_zone:
        type: integer
      split:
        type: integer
    type: object
  model.StravaActivity:
    properties:
      achievement_count:
        type: integer
      athlete:
        $ref: '#/definitions/model.Athlete'
        type: object
      athlete_count:
        type: integer
      available_zones:
        items:
          type: string
        type: array
      average_speed:
        type: integer
      best_efforts:
        items:
          type: string
        type: array
      calories:
        type: integer
      comment_count:
        type: integer
      commute:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      device_name:
        type: string
      display_hide_heartrate_option:
        type: boolean
      distance:
        type: integer
      elapsed_time:
        type: integer
      elev_high:
        type: integer
      elev_low:
        type: integer
      embed_token:
        type: string
      end_latlng:
        items:
          type: number
        type: array
      external_id:
        type: string
      flagged:
        type: boolean
      from_accepted_tag:
        type: boolean
      gear_id:
        type: string
      has_heartrate:
        type: boolean
      has_kudoed:
        type: boolean
      heartrate_opt_out:
        type: boolean
      id:
        type: integer
      is_sync:
        type: boolean
      kudos_count:
        type: integer
      laps:
        items:
          type: string
        type: array
      location_city:
        type: string
      location_country:
        type: string
      location_state:
        type: string
      manual:
        type: boolean
      map:
        $ref: '#/definitions/model.Map'
        type: object
      max_speed:
        type: integer
      moving_time:
        type: integer
      name:
        type: string
      perceived_exertion:
        type: string
      photo_count:
        type: integer
      photos:
        $ref: '#/definitions/model.Photos'
        type: object
      pr_count:
        type: integer
      prefer_perceived_exertion:
        type: boolean
      private:
        type: boolean
      resource_state:
        type: integer
      segment_efforts:
        items:
          type: string
        type: array
      similar_activities:
        $ref: '#/definitions/model.SimilarActivities'
        type: object
      splits_metric:
        items:
          $ref: '#/definitions/model.SplitsMetric'
        type: array
      splits_standard:
        items:
          $ref: '#/definitions/model.SplitsStandard'
        type: array
      start_date:
        type: string
      start_date_local:
        type: string
      start_latitude:
        type: number
      start_latlng:
        items:
          type: number
        type: array
      start_longitude:
        type: number
      timezone:
        type: string
      total_elevation_gain:
        type: integer
      total_photo_count:
        type: integer
      trainer:
        type: boolean
      type:
        type: string
      upload_id:
        type: integer
      upload_id_str:
        type: string
      utc_offset:
        type: integer
      visibility:
        type: string
      workout_type:
        type: integer
    type: object
  model.StravaAddRequest:
    properties:
      strava_activity:
        $ref: '#/definitions/model.StravaActivity'
        type: object
      strava_id:
        type: string
      user_id:
        type: string
    type: object
  model.Trend:
    properties:
      current_activity_index:
        type: string
      direction:
        type: integer
      max_speed:
        type: integer
      mid_speed:
        type: integer
      min_speed:
        type: integer
      speeds:
        items:
          type: string
        type: array
    type: object
  model.User:
    properties:
      address:
        items:
          $ref: '#/definitions/model.Address'
        type: array
      avatar:
        type: string
      birthdate:
        type: string
      blood_type:
        type: string
      citycen_id:
        type: string
      confirm:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      emergency_contact:
        type: string
      emergency_phone:
        type: string
      events:
        items:
          type: string
        type: array
      firebase_tokens:
        items:
          $ref: '#/definitions/model.FirebaseToken'
        type: array
      firstname:
        type: string
      firstname_th:
        type: string
      fullname:
        type: string
      gender:
        type: string
      lastname:
        type: string
      lastname_th:
        type: string
      nationality:
        type: string
      passport:
        type: string
      pf:
        type: string
      phone:
        type: string
      role:
        type: string
      strava_avatar:
        type: string
      strava_firstname:
        type: string
      strava_id:
        type: string
      strava_latname:
        type: string
      updated_at:
        type: string
    type: object
  model.UserProviderRequest:
    properties:
      avatar:
        type: string
      birthdate:
        type: string
      email:
        description: 'in: body'
        type: string
      firstname:
        type: string
      fullname:
        type: string
      gender:
        type: string
      lastname:
        type: string
      pf:
        type: string
      provider:
        type: string
      provider_id:
        type: string
    required:
    - pf
    - provider
    - provider_id
    type: object
  model.UserStravaSyncRequest:
    properties:
      email:
        description: 'in: body'
        type: string
      provider:
        type: string
      provider_id:
        type: string
      strava_avatar:
        type: string
      strava_firstname:
        type: string
      strava_id:
        type: string
      strava_latname:
        type: string
    required:
    - provider
    - provider_id
    - strava_id
    type: object
  model.WorkoutActivityInfo:
    properties:
      activity_type:
        type: string
      app:
        type: string
      calory:
        type: number
      caption:
        type: string
      distance:
        type: number
      duration:
        type: integer
      end_date:
        type: string
      id:
        type: string
      is_sync:
        type: boolean
      locations:
        items:
          $ref: '#/definitions/model.Location'
        type: array
      net_elevation_gain:
        type: number
      pace:
        type: number
      ref_id:
        type: string
      start_date:
        type: string
      time_string:
        type: string
      workout_date:
        type: string
    type: object
  model.Workouts:
    properties:
      activity_info:
        items:
          $ref: '#/definitions/model.WorkoutActivityInfo'
        type: array
      id:
        type: string
      total_distance:
        type: number
      user_id:
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  response.ResponseOAuth:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: login or add new user from open id API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UserProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseOAuth'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: user login
      tags:
      - user
  /logout:
    post:
      consumes:
      - application/json
      description: user logout system API calls
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: user logout
      tags:
      - user
  /notificationOne:
    post:
      consumes:
      - application/json
      description: send notification one token one time
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.NotificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: send notification one token one time
      tags:
      - notification
  /refreshAccessToken:
    post:
      description: Authenticates a user and provides a JWT to refresh Authorize API calls
      operationId: Authentication
      parameters:
      - description: RefreshToken
        in: formData
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseOAuth'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Refresh a JSON Web Token
      tags:
      - user
  /searchPreOrder:
    post:
      consumes:
      - application/json
      description: Search pre order detail API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.FindPreOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.PreOrder'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Search pre order detail
      tags:
      - preorder
  /signup:
    post:
      consumes:
      - application/json
      description: add new user API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UserProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseOAuth'
        "208":
          description: Already Reported
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add new user
      tags:
      - user
  /strava/activities:
    get:
      consumes:
      - application/json
      description: get activities from strava API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.StravaActivity'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: get activities from strava
      tags:
      - sync
  /strava/activity:
    post:
      consumes:
      - application/json
      description: add new activity from strava API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.StravaAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add new activity from strava
      tags:
      - sync
  /syncStrava:
    put:
      consumes:
      - application/json
      description: Update User sync user with strava API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UserStravaSyncRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Update User sync user with strava
      tags:
      - user
  /user:
    get:
      consumes:
      - application/json
      description: get user info API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get user info
      tags:
      - user
    put:
      consumes:
      - application/json
      description: put user info to update user info API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Update user info
      tags:
      - user
  /workout:
    post:
      consumes:
      - application/json
      description: save workout API calls
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.AddWorkoutForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Add workout
      tags:
      - workouts
  /workouts:
    get:
      consumes:
      - application/json
      description: list workouts API calls
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Workouts'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - bearerAuth: []
      summary: Get workouts list
      tags:
      - workouts
swagger: "2.0"
